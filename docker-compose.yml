networks:
  mcp_net:
    driver: bridge

volumes:
  pip_cache:
    driver: local
  redis_data:
    driver: local

services:
  # =============================================================================
  # MCP Web Search API Service
  # =============================================================================
  mcp-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${DOCKER_TARGET:-development}
    container_name: mcp-web-search-api
    restart: on-failure
    env_file:
      - .env
    environment:
      - PORT=${MCP_PORT:-8500}
    ports:
      - "${HOST_PORT:-8500}:${MCP_PORT:-8500}"
    networks:
      - mcp_net
    profiles:
      - dev
      - prod
    # Development-specific configuration  
    volumes:
      - pip_cache:/root/.cache/pip # Faster rebuilds
    depends_on: []
    develop:
      watch:
        # Sync Python source files and restart container
        - action: sync+restart
          path: ./app
          target: /app/app
          ignore:
            - __pycache__/
            - "*.pyc"
            - "*.pyo"
        # Sync config files and restart
        - action: sync+restart
          path: ./.env
          target: /app/.env
        # Sync requirements and rebuild
        - action: rebuild
          path: ./requirements.txt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MCP_PORT:-8500}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # =============================================================================
  # Redis Cache Service (Optional - for future use)
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    restart: on-failure
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - mcp_net
    profiles:
      - redis
      - prod-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # Production-optimized API Service
  # =============================================================================
  mcp-api-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: mcp-web-search-api-prod
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PORT=${MCP_PORT:-8500}
      - PYTHONPATH=/app
    ports:
      - "${HOST_PORT:-8500}:${MCP_PORT:-8500}"
    networks:
      - mcp_net
    profiles:
      - prod
    # No volume mounts in production for security
    depends_on: []
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MCP_PORT:-8500}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 256M
